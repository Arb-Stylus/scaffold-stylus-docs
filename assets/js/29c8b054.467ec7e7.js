"use strict";(self.webpackChunkse_2=self.webpackChunkse_2||[]).push([[92],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),y=l,f=u["".concat(p,".").concat(y)]||u[y]||d[y]||r;return n?o.createElement(f,a(a({ref:t},s),{},{components:n})):o.createElement(f,a({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:l,a[1]=i;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8521:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(7462),l=(n(7294),n(4137));const r={sidebar_position:2,toc_max_heading_level:5},a="Deploy Your NextJS App",i={unversionedId:"deploying/deploy-nextjs-app",id:"deploying/deploy-nextjs-app",title:"Deploy Your NextJS App",description:"Deploy to Vercel or IPFS.",source:"@site/docs/deploying/deploy-nextjs-app.mdx",sourceDirName:"deploying",slug:"/deploying/deploy-nextjs-app",permalink:"/deploying/deploy-nextjs-app",draft:!1,editUrl:"https://github.com/Arb-Stylus/scaffold-stylus-docs/edit/main/docs/deploying/deploy-nextjs-app.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"Deploy Your Stylus Smart Contracts",permalink:"/deploying/deploy-smart-contracts"},next:{title:"\u2705 Disabling Type and Linting Error Checks",permalink:"/disable-type-linting-error-checks"}},p={},c=[{value:"Deploy to Vercel",id:"deploy-to-vercel",level:2},{value:"Deploy to IPFS",id:"deploy-to-ipfs",level:2},{value:"Scaffold App Configuration",id:"scaffold-app-configuration",level:2},{value:"- targetNetworks",id:"--targetnetworks",level:4},{value:"- pollingInterval",id:"--pollinginterval",level:4},{value:"- alchemyApiKey",id:"--alchemyapikey",level:4},{value:"- walletConnectProjectId",id:"--walletconnectprojectid",level:4},{value:"- onlyLocalBurnerWallet",id:"--onlylocalburnerwallet",level:4},{value:"- walletAutoConnect",id:"--walletautoconnect",level:4}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"deploy-your-nextjs-app"},"Deploy Your NextJS App"),(0,l.kt)("p",null,"Deploy to Vercel or IPFS."),(0,l.kt)("h2",{id:"deploy-to-vercel"},"Deploy to Vercel"),(0,l.kt)("admonition",{title:"Hint",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"We recommend connecting your GitHub repo to Vercel (through the Vercel UI) so it gets automatically deployed when pushing to ",(0,l.kt)("inlineCode",{parentName:"p"},"main"),".")),(0,l.kt)("p",null,"If you want to deploy directly from the CLI, run this and follow the steps to deploy to Vercel:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"yarn vercel\n")),(0,l.kt)("p",null,"You might need to log in to Vercel first by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"yarn vercel:login\n")),(0,l.kt)("p",null,"Once you log in (email, GitHub, etc), the default options should work. It'll give you a public URL."),(0,l.kt)("p",null,"If you want to redeploy to the same production URL you can run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"yarn vercel --prod\n")),(0,l.kt)("admonition",{title:"Info",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If you want to deploy without checking types, you can run:"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre"},"yarn vercel:yolo --prod\n"))),(0,l.kt)("p",null,"If you omit the ",(0,l.kt)("inlineCode",{parentName:"p"},"--prod")," flag it will deploy it to a preview/test URL."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Make sure to check the values of your Scaffold Configuration before deploying your NextJS App.")),(0,l.kt)("h2",{id:"deploy-to-ipfs"},"Deploy to IPFS"),(0,l.kt)("p",null,"You can also deploy your app to ",(0,l.kt)("a",{parentName:"p",href:"https://www.bgipfs.com/"},"BG IPFS")," by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"yarn ipfs\n")),(0,l.kt)("p",null,"This will build your app and deploy it to BG IPFS. After deployment, you'll receive a URL where your app is accessible."),(0,l.kt)("h2",{id:"scaffold-app-configuration"},"Scaffold App Configuration"),(0,l.kt)("p",null,"You can configure different settings for your dapp at ",(0,l.kt)("inlineCode",{parentName:"p"},"packages/nextjs/scaffold.config.ts"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export type ScaffoldConfig = {\n  targetNetworks: Chain[];\n  pollingInterval: number;\n  alchemyApiKey: string;\n  walletConnectProjectId: string;\n  onlyLocalBurnerWallet: boolean;\n  walletAutoConnect: boolean;\n  // your dapp custom config, eg:\n  // tokenIcon : string;\n};\n")),(0,l.kt)("p",null,"The configuration parameters are described below. Make sure to update the values according to your needs:"),(0,l.kt)("h4",{id:"--targetnetworks"},"- targetNetworks"),(0,l.kt)("p",null,"Array of blockchain networks where your dapp is deployed. Use values that are present on chains object from ",(0,l.kt)("a",{parentName:"p",href:"https://viem.sh/docs/chains/introduction"},"viem/chains")," eg: ",(0,l.kt)("inlineCode",{parentName:"p"},"targetNetworks: [chains.optimism]")),(0,l.kt)("p",null,"To add a custom chain that's not in viem/chains, see the recipe, ",(0,l.kt)("a",{parentName:"p",href:"/recipes/add-custom-chain"},"Add a custom chain"),"."),(0,l.kt)("h4",{id:"--pollinginterval"},"- pollingInterval"),(0,l.kt)("p",null,"The interval in milliseconds at which your front-end application polls the RPC servers for fresh data. ",(0,l.kt)("em",{parentName:"p"},"Note that this setting does not affect the local network.")),(0,l.kt)("h4",{id:"--alchemyapikey"},"- alchemyApiKey"),(0,l.kt)("p",null,"Default Alchemy API key from Scaffold-Stylus for local testing purposes.\nIt's recommended to obtain your own API key from the ",(0,l.kt)("a",{parentName:"p",href:"https://dashboard.alchemyapi.io/"},"Alchemy Dashboard")," and store it in this environment variable: ",(0,l.kt)("inlineCode",{parentName:"p"},"NEXT_PUBLIC_ALCHEMY_API_KEY")," in the ",(0,l.kt)("inlineCode",{parentName:"p"},"\\packages\\nextjs\\.env.local")," file."),(0,l.kt)("h4",{id:"--walletconnectprojectid"},"- walletConnectProjectId"),(0,l.kt)("p",null,"WalletConnect's default project ID from Scaffold-Stylus for local testing purposes.\nIt's recommended to obtain your own project ID from the ",(0,l.kt)("a",{parentName:"p",href:"https://cloud.walletconnect.com"},"WalletConnect website")," and store it in this environment variable: ",(0,l.kt)("inlineCode",{parentName:"p"},"NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID")," in the ",(0,l.kt)("inlineCode",{parentName:"p"},"\\packages\\nextjs\\.env.local")," file."),(0,l.kt)("h4",{id:"--onlylocalburnerwallet"},"- onlyLocalBurnerWallet"),(0,l.kt)("p",null,"Controls the networks where the Burner Wallet feature is available. This feature provides a lightweight wallet for users."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"true")," => Use Burner Wallet only on Hardhat network."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"false")," => Use Burner Wallet on all networks.")),(0,l.kt)("h4",{id:"--walletautoconnect"},"- walletAutoConnect"),(0,l.kt)("p",null,"Set it to ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to activate automatic wallet connection behavior:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If the user was connected into a wallet before, on page reload it reconnects automatically."),(0,l.kt)("li",{parentName:"ul"},"If the user is not connected to any wallet, on reload, it connects to the burner wallet ",(0,l.kt)("em",{parentName:"li"},"if it is enabled for the current network"),". See ",(0,l.kt)("inlineCode",{parentName:"li"},"onlyLocalBurnerWallet"))),(0,l.kt)("p",null,"You can extend this configuration file, adding new parameters that you need to use across your dapp ",(0,l.kt)("strong",{parentName:"p"},"(make sure you update the above type ",(0,l.kt)("inlineCode",{parentName:"strong"},"ScaffoldConfig"),")"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'  tokenIcon: "\ud83d\udc8e",\n')),(0,l.kt)("p",null,"To use the values from the ",(0,l.kt)("inlineCode",{parentName:"p"},"ScaffoldConfig")," in any other file of your application, you first need to import it in those files:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import scaffoldConfig from "~~/scaffold.config";\n')))}d.isMDXComponent=!0}}]);