"use strict";(self.webpackChunkse_2=self.webpackChunkse_2||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"\ud83c\udfd7 Welcome to Scaffold-Stylus","href":"/scaffold-stylus-docs/","docId":"intro"},{"type":"category","label":"\ud83d\ude80 QuickStart","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/scaffold-stylus-docs/quick-start/installation","docId":"quick-start/installation"},{"type":"link","label":"Environment","href":"/scaffold-stylus-docs/quick-start/environment","docId":"quick-start/environment"}],"href":"/scaffold-stylus-docs/quick-start"},{"type":"category","label":"\u2699 Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Address","href":"/scaffold-stylus-docs/components/Address","docId":"components/Address"},{"type":"link","label":"Balance","href":"/scaffold-stylus-docs/components/Balance","docId":"components/Balance"},{"type":"link","label":"AddressInput","href":"/scaffold-stylus-docs/components/AddressInput","docId":"components/AddressInput"},{"type":"link","label":"EtherInput","href":"/scaffold-stylus-docs/components/EtherInput","docId":"components/EtherInput"},{"type":"link","label":"InputBase","href":"/scaffold-stylus-docs/components/InputBase","docId":"components/InputBase"},{"type":"link","label":"IntegerInput","href":"/scaffold-stylus-docs/components/IntergerInput","docId":"components/IntergerInput"},{"type":"link","label":"RainbowKitCustomConnectButton","href":"/scaffold-stylus-docs/components/RainbowKitCustomConnectButton","docId":"components/RainbowKitCustomConnectButton"},{"type":"link","label":"BlockieAvatar","href":"/scaffold-stylus-docs/components/BlockieAvatar","docId":"components/BlockieAvatar"}],"href":"/scaffold-stylus-docs/components"},{"type":"category","label":"\ud83d\udee0 Interacting with Your Smart Contracts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useScaffoldReadContract","href":"/scaffold-stylus-docs/hooks/useScaffoldReadContract","docId":"hooks/useScaffoldReadContract"},{"type":"link","label":"useScaffoldWriteContract","href":"/scaffold-stylus-docs/hooks/useScaffoldWriteContract","docId":"hooks/useScaffoldWriteContract"},{"type":"link","label":"useScaffoldWatchContractEvent","href":"/scaffold-stylus-docs/hooks/useScaffoldWatchContractEvent","docId":"hooks/useScaffoldWatchContractEvent"},{"type":"link","label":"useScaffoldEventHistory","href":"/scaffold-stylus-docs/hooks/useScaffoldEventHistory","docId":"hooks/useScaffoldEventHistory"},{"type":"link","label":"useDeployedContractInfo","href":"/scaffold-stylus-docs/hooks/useDeployedContractInfo","docId":"hooks/useDeployedContractInfo"},{"type":"link","label":"useScaffoldContract","href":"/scaffold-stylus-docs/hooks/useScaffoldContract","docId":"hooks/useScaffoldContract"},{"type":"link","label":"useTransactor","href":"/scaffold-stylus-docs/hooks/useTransactor","docId":"hooks/useTransactor"}],"href":"/scaffold-stylus-docs/hooks/"},{"type":"link","label":"\ud83d\udce1 Interacting with External Contracts","href":"/scaffold-stylus-docs/external-contracts/","docId":"external-contracts/external-contracts"},{"type":"category","label":"\ud83e\uddea Recipes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Get balance of the connected account","href":"/scaffold-stylus-docs/recipes/GetCurrentBalanceFromAccount","docId":"recipes/GetCurrentBalanceFromAccount"},{"type":"link","label":"Write to contract with writeContractAsync button","href":"/scaffold-stylus-docs/recipes/WriteToContractWriteAsyncButton","docId":"recipes/WriteToContractWriteAsyncButton"},{"type":"link","label":"Read a uint from a contract","href":"/scaffold-stylus-docs/recipes/ReadUintFromContract","docId":"recipes/ReadUintFromContract"},{"type":"link","label":"Wagmi useWriteContract with transaction status","href":"/scaffold-stylus-docs/recipes/WagmiContractWriteWithFeedback","docId":"recipes/WagmiContractWriteWithFeedback"},{"type":"link","label":"Add a custom chain","href":"/scaffold-stylus-docs/recipes/add-custom-chain","docId":"recipes/add-custom-chain"}],"href":"/scaffold-stylus-docs/recipes"},{"type":"category","label":"\ud83d\udef3 Shipping Your dApp","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploy Your Stylus Smart Contracts","href":"/scaffold-stylus-docs/deploying/deploy-smart-contracts","docId":"deploying/deploy-smart-contracts"},{"type":"link","label":"Deploy Your NextJS App","href":"/scaffold-stylus-docs/deploying/deploy-nextjs-app","docId":"deploying/deploy-nextjs-app"}],"href":"/scaffold-stylus-docs/deploying"},{"type":"link","label":"\u2705 Disabling Type and Linting Error Checks","href":"/scaffold-stylus-docs/disable-type-linting-error-checks","docId":"disable-type-linting-error-checks"},{"type":"category","label":"\ud83d\udd0c Extensions (Coming Soon)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"howToInstall","href":"/scaffold-stylus-docs/extensions/howToInstall","docId":"extensions/howToInstall"},{"type":"link","label":"createExtensions","href":"/scaffold-stylus-docs/extensions/createExtensions","docId":"extensions/createExtensions"}],"href":"/scaffold-stylus-docs/extensions"},{"type":"category","label":"\ud83d\ude4f Contributing to Scaffold-Stylus","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Issues","href":"/scaffold-stylus-docs/contributing/Issues","docId":"contributing/Issues"},{"type":"link","label":"Pull Requests","href":"/scaffold-stylus-docs/contributing/pullRequests","docId":"contributing/pullRequests"}],"href":"/scaffold-stylus-docs/contributing/"}]},"docs":{"components/Address":{"id":"components/Address","title":"Address","description":"Display an address (or ENS) along with a utility icon to copy the address. If the address is associated with an ENS that has an avatar, this avatar will be displayed. If not, a blockie image representation of the address will be shown.","sidebar":"tutorialSidebar"},"components/AddressInput":{"id":"components/AddressInput","title":"AddressInput","description":"Display an Ethereum address input that validates the address format, resolves ENS domains, and shows their avatars.","sidebar":"tutorialSidebar"},"components/Balance":{"id":"components/Balance","title":"Balance","description":"Displays the balance of a given address in both ether (ETH) and US dollars (USD).","sidebar":"tutorialSidebar"},"components/BlockieAvatar":{"id":"components/BlockieAvatar","title":"BlockieAvatar","description":"Show a blockie (bar code profile icon) component for a given public address.","sidebar":"tutorialSidebar"},"components/EtherInput":{"id":"components/EtherInput","title":"EtherInput","description":"Displays an input field for ETH/USD amount, with an option to convert between ETH and USD.","sidebar":"tutorialSidebar"},"components/InputBase":{"id":"components/InputBase","title":"InputBase","description":"Simple building block for creating an input which comes with basic default styles (colors, rounded borders).","sidebar":"tutorialSidebar"},"components/IntergerInput":{"id":"components/IntergerInput","title":"IntegerInput","description":"Provides an input field for integer values, validating that user input is a valid integer, and showing error if not.","sidebar":"tutorialSidebar"},"components/RainbowKitCustomConnectButton":{"id":"components/RainbowKitCustomConnectButton","title":"RainbowKitCustomConnectButton","description":"Scaffold-Stylus uses a custom \\"Connect Button\\", based on RainbowKit, that is enhanced with several useful features:","sidebar":"tutorialSidebar"},"contributing/contributing":{"id":"contributing/contributing","title":"\ud83d\ude4f Contributing to Scaffold-Stylus","description":"We welcome contributions to Scaffold-Stylus!","sidebar":"tutorialSidebar"},"contributing/Issues":{"id":"contributing/Issues","title":"Issues","description":"Issues should be used to report problems, request a new feature, or discuss potential changes before a PR is created.","sidebar":"tutorialSidebar"},"contributing/pullRequests":{"id":"contributing/pullRequests","title":"Pull Requests","description":"Pull Request Process","sidebar":"tutorialSidebar"},"deploying/deploy-nextjs-app":{"id":"deploying/deploy-nextjs-app","title":"Deploy Your NextJS App","description":"Deploy to Vercel or IPFS.","sidebar":"tutorialSidebar"},"deploying/deploy-smart-contracts":{"id":"deploying/deploy-smart-contracts","title":"Deploy Your Stylus Smart Contracts","description":"To deploy your Stylus smart contracts to Arbitrum networks, there are a few things you need to adjust.","sidebar":"tutorialSidebar"},"disable-type-linting-error-checks":{"id":"disable-type-linting-error-checks","title":"\u2705 Disabling Type and Linting Error Checks","description":"TypeScript helps you catch errors at compile time, which can save time and improve code quality, but can be challenging for those who are new to the language or who are used to the more dynamic nature of JavaScript. These sections show the steps required to disable type & lint checks on different levels.","sidebar":"tutorialSidebar"},"extensions/createExtensions":{"id":"extensions/createExtensions","title":"createExtensions","description":"Coming soon","sidebar":"tutorialSidebar"},"extensions/howToInstall":{"id":"extensions/howToInstall","title":"howToInstall","description":"Coming soon","sidebar":"tutorialSidebar"},"external-contracts/external-contracts":{"id":"external-contracts/external-contracts","title":"\ud83d\udce1 Interacting with External Contracts","description":"If you need to interact with external contracts (i.e. not deployed with your Scaffold-Stylus instance, e.g DAI contract) you can add external contract data to your packages/nextjs/contracts/externalContracts.ts file, which would let you use Scaffold-Stylus custom hooks.","sidebar":"tutorialSidebar"},"hooks/hooks":{"id":"hooks/hooks","title":"\ud83d\udee0 Interacting with Your Smart Contracts","description":"Scaffold-Stylus provides a collection of custom React hooks designed to simplify interactions with your deployed smart contracts. These hooks are wrappers around Wagmi, an easy-to-use interface with typescript autocompletions for reading from, writing to, and monitoring events emitted by your smart contracts.","sidebar":"tutorialSidebar"},"hooks/useDeployedContractInfo":{"id":"hooks/useDeployedContractInfo","title":"useDeployedContractInfo","description":"Use this hook to fetch details about a deployed smart contract, including the ABI and address.","sidebar":"tutorialSidebar"},"hooks/useScaffoldContract":{"id":"hooks/useScaffoldContract","title":"useScaffoldContract","description":"Use this hook to get your contract instance by providing the contract name. It enables you to interact with your contract methods.","sidebar":"tutorialSidebar"},"hooks/useScaffoldEventHistory":{"id":"hooks/useScaffoldEventHistory","title":"useScaffoldEventHistory","description":"Use this hook to retrieve historical event logs for your smart contract, providing past activity data, with the option to watch for new events.","sidebar":"tutorialSidebar"},"hooks/useScaffoldReadContract":{"id":"hooks/useScaffoldReadContract","title":"useScaffoldReadContract","description":"Use this hook to read public variables and get data from read-only functions of your smart contract.","sidebar":"tutorialSidebar"},"hooks/useScaffoldWatchContractEvent":{"id":"hooks/useScaffoldWatchContractEvent","title":"useScaffoldWatchContractEvent","description":"Use this hook to subscribe to events emitted by your smart contract, and receive real-time updates when these events are emitted.","sidebar":"tutorialSidebar"},"hooks/useScaffoldWriteContract":{"id":"hooks/useScaffoldWriteContract","title":"useScaffoldWriteContract","description":"Use this hook to send a transaction to your smart contract to write data or perform an action.","sidebar":"tutorialSidebar"},"hooks/useTransactor":{"id":"hooks/useTransactor","title":"useTransactor","description":"Use this hook to interact with the chain and give UI feedback on the transaction status.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"\ud83c\udfd7 Welcome to Scaffold-Stylus","description":"Scaffold-Stylus is everything you need to get started building decentralized applications on Arbitrum! \ud83d\ude80","sidebar":"tutorialSidebar"},"quick-start/environment":{"id":"quick-start/environment","title":"Environment","description":"How to set up your development environment for Scaffold Stylus.","sidebar":"tutorialSidebar"},"quick-start/installation":{"id":"quick-start/installation","title":"Installation","description":"Requirements and installation methods to get started with Scaffold Stylus.","sidebar":"tutorialSidebar"},"recipes/add-custom-chain":{"id":"recipes/add-custom-chain","title":"Add a custom chain","description":"Learn how to add custom chains to your project.","sidebar":"tutorialSidebar"},"recipes/GetCurrentBalanceFromAccount":{"id":"recipes/GetCurrentBalanceFromAccount","title":"Get balance of the connected account","description":"Learn how to retrieve and display the ETH balance of the connected account in your dApp.","sidebar":"tutorialSidebar"},"recipes/ReadUintFromContract":{"id":"recipes/ReadUintFromContract","title":"Read a uint from a contract","description":"Learn how to read from contract functions which accepts arguments / no arguments and display them on UI.","sidebar":"tutorialSidebar"},"recipes/WagmiContractWriteWithFeedback":{"id":"recipes/WagmiContractWriteWithFeedback","title":"Wagmi useWriteContract with transaction status","description":"Show feedback on transaction status to user by `useWriteContract` along with `useTransactor`","sidebar":"tutorialSidebar"},"recipes/WriteToContractWriteAsyncButton":{"id":"recipes/WriteToContractWriteAsyncButton","title":"Write to contract with writeContractAsync button","description":"Learn how to create a button that executes the writeContractAsync function to interact with a smart contract.","sidebar":"tutorialSidebar"}}}')}}]);