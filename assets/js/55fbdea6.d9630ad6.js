"use strict";(self.webpackChunkse_2=self.webpackChunkse_2||[]).push([[128],{4137:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>f});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),c=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=c(t.components);return n.createElement(l.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(a),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(f,i(i({ref:e},p),{},{components:a})):n.createElement(f,i({ref:e},p))}));function f(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[d]="string"==typeof t?t:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3402:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(4137));const o={sidebar_position:7},i="useTransactor",s={unversionedId:"hooks/useTransactor",id:"hooks/useTransactor",title:"useTransactor",description:"Use this hook to interact with the chain and give UI feedback on the transaction status.",source:"@site/docs/hooks/useTransactor.md",sourceDirName:"hooks",slug:"/hooks/useTransactor",permalink:"/scaffold-stylus-docs/hooks/useTransactor",draft:!1,editUrl:"https://github.com/Arb-Stylus/scaffold-stylus-docs/edit/main/docs/hooks/useTransactor.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"useScaffoldContract",permalink:"/scaffold-stylus-docs/hooks/useScaffoldContract"},next:{title:"\ud83d\udce1 Interacting with External Contracts",permalink:"/scaffold-stylus-docs/external-contracts/"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"useTransactor",id:"usetransactor-1",level:3},{value:"callback function",id:"callback-function",level:3},{value:"Return Values",id:"return-values",level:2},{value:"useTransactor",id:"usetransactor-2",level:3},{value:"callback function",id:"callback-function-1",level:3}],p={toc:c},d="wrapper";function u(t){let{components:e,...o}=t;return(0,r.kt)(d,(0,n.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"usetransactor"},"useTransactor"),(0,r.kt)("p",null,"Use this hook to interact with the chain and give UI feedback on the transaction status."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Transaction success",src:a(8359).Z,width:"478",height:"110"})),(0,r.kt)("p",null,"Any error will instead show a popup with nice error message."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Error Example",src:a(14).Z,width:"480",height:"110"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const transactor = useTransactor();\nconst writeTx = transactor({\n  to: "0x97843608a00e2bbc75ab0C1911387E002565DEDE", // address of buidlguidl.eth\n  value: 1000000000000000000n,\n});\nawait writeTx();\n')),(0,r.kt)("p",null,"This example tries to send 1 ETH to the address ",(0,r.kt)("inlineCode",{parentName:"p"},"buidlguidl.eth"),", prompting the connected ",(0,r.kt)("a",{parentName:"p",href:"https://wagmi.sh/react/api/hooks/useWalletClient#usewalletclient"},(0,r.kt)("inlineCode",{parentName:"a"},"WalletClient")),' for a signature. And in the case of a successful transaction, it will show a popup in the UI with the message: "\ud83c\udf89 Transaction completed successfully!".'),(0,r.kt)("p",null,"You can pass in anything that is a valid parameter to ",(0,r.kt)("a",{parentName:"p",href:"https://viem.sh/docs/actions/wallet/sendTransaction#parameters"},"Viem's ",(0,r.kt)("inlineCode",{parentName:"a"},"sendTransaction")," function")," to callback function. It also possible to pass it an promise that resolves in with a transaction hash for example promise from ",(0,r.kt)("a",{parentName:"p",href:"https://wagmi.sh/react/api/hooks/useWriteContract#mutate-async"},"Wagmi's ",(0,r.kt)("inlineCode",{parentName:"a"},"writeContractAsync")," function"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/recipes/WriteToContractWriteAsyncButton"},"Refer to this recipe")," for a more detailed example."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("h3",{id:"usetransactor-1"},"useTransactor"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"_","walletClient")," (optional)"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://viem.sh/docs/clients/wallet.html"},(0,r.kt)("inlineCode",{parentName:"a"},"WalletClient"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The wallet client that should sign the transaction. Defaults to the connected wallet client, and is only needed if the transaction is not already sent using ",(0,r.kt)("inlineCode",{parentName:"td"},"writeContractAsync"))))),(0,r.kt)("h3",{id:"callback-function"},"callback function"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"tx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://viem.sh/docs/actions/wallet/sendTransaction#parameters"},(0,r.kt)("inlineCode",{parentName:"a"},"sendTransaction"),"-parameters")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise<Hash>")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Either valid parameters for ",(0,r.kt)("a",{parentName:"td",href:"https://viem.sh/docs/actions/wallet/sendTransaction#parameters"},(0,r.kt)("inlineCode",{parentName:"a"},"sendTransaction"),"-parameters")," or a promise that resolves with the transaction hash, e.g. ",(0,r.kt)("a",{parentName:"td",href:"https://wagmi.sh/react/api/hooks/useWriteContract#mutate-async"},"Wagmi's ",(0,r.kt)("inlineCode",{parentName:"a"},"writeContractAsync")," function"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"options")," (optional)"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options for the confirmation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"\u2514\u2500options.blockConfirmations")," (optional)"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of block confirmations to wait for before resolving. Defaults to 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"\u2514\u2500options.onBlockConfirmation")," (optional)"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"function")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A callback function that is called once all ",(0,r.kt)("inlineCode",{parentName:"td"},"blockConfirmations")," is reached.")))),(0,r.kt)("h2",{id:"return-values"},"Return Values"),(0,r.kt)("h3",{id:"usetransactor-2"},"useTransactor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The callback function that is used to initialize the UI feedback flow.")),(0,r.kt)("h3",{id:"callback-function-1"},"callback function"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A promise that resolves with the transaction hash once the transaction is mined.")))}u.isMDXComponent=!0},14:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/transactorFail-9757b35bce3421716363bd401d0e032e.gif"},8359:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/transactorSuccess-a2fd1dd6a782d82af1325f3ebce5ca10.gif"}}]);